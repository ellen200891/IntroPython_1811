# Задания:
# 1) У вас есть список my_list с значениями типа int.
# Распечатать те значения, которые больше 100.
# Задание выполнить с помощью цикла for.

my_list = [1, 2, 3, 4, 5, 645, 7, 8, 9]
for number in my_list:
    if number > 100:
        print(f"Number {number}")

###################################################################
# 2) У вас есть список my_list с значениями типа int, и пустой список my_results.
# Добавить в my_results те значения, которые больше 100.
# Распечатать список my_results.
# Задание выполнить с помощью цикла for.

my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9]
my_results = []
for number in my_list:
    if number > 100:
        my_results.append(number)
print(my_results)

###################################################################
# 3) У вас есть список my_list с значениями типа int.
# Если в my_list количество элементов меньше 2, то в конец добавить значение 0.
# Если количество элементов больше или равно 2, то добавить сумму последних двух элементов.
# Количество элементов в списке можно получить с помощью функции len(my_list)

my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9]
len_strings = len(my_list)
if len_strings < 2:
    my_list.append(0)
    print(my_list)
else:
    value_1 = my_list[-1]
    value_2 = my_list[-2]
    my_list.append(value_1 + value_2)
    print(my_list)

###################################################################

# 4) Пользователь вводит value - число с запятой (например 3.14) с клавиатуры.
# Вы приводите это value к типу float и выводите результат выражения value ** -1.
# Написать программу, которая вычисляет данное выражение и
# корректно обрабатывает возможные исключения.
try:
    value = float(input("Введите число "))
    result = value ** (-1)
    print(result)
except ValueError:
    print("Введи только цифры!")
except ZeroDivisionError:
    print("На ноль делить нельзя! ")


###################################################################
#
# 5) У вас есть список значений my_list и список индексов my_indexes
# (начинается с нуля и количество элементов совпадает с количеством в my_list.
# Распечатать значения из my_list через обращение по индексу. См. пример выше.

my_list = [1, 2, 3, 4, 5, 6, 7]
len_list = len(my_list)
my_indexes = []
for index in my_list:
    my_indexes.append(index - 1)
for index in my_indexes:
 	print(my_list[index])

###################################################################

# 6) У вас есть два списка my_list_1 и my_list_2 равной длинны и
# список индексов my_indexes (начинается с нуля и количество элементов
# совпадает с количеством в my_list_1.
# Распечатать пары значений из my_list_1 и my_list_2 через обращение по индексу.

###################################################################
my_list_1 = [7, 6, 5, 4, 3, 2, 1]
my_list_2 = [1, 2, 3, 4, 5, 6, 7]
my_indexes = []
for index in my_list_1:
    my_indexes.append(index - 1)
for index in my_indexes:
    my_list = (my_list_2[index], my_list_1[index])
    print(my_list)

###################################################################

# 7) У вас есть строка my_string = '0123456789'.
# Сгенерировать целые числа (тип int) от 0 до 99 и поместить их в список.
# Задание нужно выполнить ТОЛЬКО через цикл в цикле(См. пример выше) и приведение типов .
# Генерирование через range или другие "фишки" я засчитывать не буду ))

my_string = '0123456789'
old_list = list(my_string)
new_list = []
for number_1 in old_list:
    for number_2 in old_list:
        new_list.append(int(number_1+number_2))
print(new_list)
